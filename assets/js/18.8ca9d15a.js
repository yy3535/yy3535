(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{195:function(t,a,n){"use strict";n.r(a);var s=n(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"git"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[t._v("#")]),t._v(" git")]),t._v(" "),n("h2",{attrs:{id:"基本操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("    查看本地 提交地址\n    git remote "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v\n\n    添加 提交地址\n    git remote add origin 地址\n\n    删除本地 提交地址\n    git remote rm origin\n    \n    删除远程分支\n    git push origin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'分支名字'")]),t._v("\n\n    撤销 修改的文件 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("为所有\n    git checkout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" readme"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n  \n    拉取分支\t\n\t  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" fetch origin 分支"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("qimingzi\n    \n    合并分支 \n\t  git merge dev\n  \n    返回到指定的分支\n      git log\n      git reset "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard d22f3b7de65383a3f277237a79af27b854e94f67\n\n    提交 加"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f是强制\n      git push "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin master "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f \n\n    克隆某个分支\n\t\t\tgit clone "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b b1 https"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/github.com/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("  \n\t\t\tgit命令：全局设置用户名邮箱配置\n\n    查看git用户名\n      git config user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n\n    查看邮箱配置\n      git config user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email\n\n    全局配置用户名\n      git config "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameVal"')]),t._v("\n\n    全局配置邮箱\n      git config "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eamil@qq.com"')]),t._v("\n\n\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);