"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5241],{3702:(e,l,i)=>{i.r(l),i.d(l,{data:()=>a});const a={key:"v-1396b130",path:"/Todo/",title:"问题",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"每日默写",slug:"每日默写",children:[]},{level:2,title:"必问问题",slug:"必问问题",children:[]},{level:2,title:"作业",slug:"作业",children:[]}],filePathRelative:"Todo/README.md",git:{updatedTime:1576291131e3,contributors:[]}}},2445:(e,l,i)=>{i.r(l),i.d(l,{default:()=>p});const a=(0,i(6252).uE)('<h1 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h1><h2 id="每日默写" tabindex="-1"><a class="header-anchor" href="#每日默写" aria-hidden="true">#</a> 每日默写</h2><ul><li><p>webpack配置文档</p></li><li><p>vuex源码</p></li><li><p>vue源码</p></li><li><p>bind/call/apply原理</p></li><li><p>深拷贝/浅拷贝区别，实现</p></li><li><p>history/hash路由</p></li><li><p>promise实现，promise.all,race,finally实现</p></li><li><p>节流和防抖区别</p></li><li><p>SSR后端渲染原理</p></li><li><p>jsonp包手写</p></li><li><p>原生ajax请求（原生XMLHttpRequest 发 ajax请求）</p></li><li><p>express一套代码</p></li><li><p>node require common.js规范 实现</p></li><li><p>实现Buffer.concat方法</p></li><li><p>跨域后端请求头设置</p></li><li><p>本地存储区别</p></li></ul><h2 id="必问问题" tabindex="-1"><a class="header-anchor" href="#必问问题" aria-hidden="true">#</a> 必问问题</h2><ul><li></li></ul><h2 id="作业" tabindex="-1"><a class="header-anchor" href="#作业" aria-hidden="true">#</a> 作业</h2><ul><li>http-server 缓存206 +gzip压缩+如果是文件 标识文件图标 文件夹 文件夹图标 + 提交到npm包上 代码发到github上</li></ul>',7),p={render:function(e,l){return a}}}}]);