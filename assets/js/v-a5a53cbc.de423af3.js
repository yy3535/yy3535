"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6950],{6583:(n,a,s)=>{s.r(a),s.d(a,{data:()=>l});const l={key:"v-a5a53cbc",path:"/summary/project.html",title:"业务开发",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"业务开发流程",slug:"业务开发流程",children:[{level:3,title:"技术选型",slug:"技术选型",children:[]},{level:3,title:"业务开发",slug:"业务开发-1",children:[]},{level:3,title:"测试验证",slug:"测试验证",children:[]},{level:3,title:"发布上线",slug:"发布上线",children:[]}]},{level:2,title:"项目设计与原理分析",slug:"项目设计与原理分析",children:[{level:3,title:"CSS模块化设计",slug:"css模块化设计",children:[]},{level:3,title:"JS组件设计",slug:"js组件设计",children:[]},{level:3,title:"JS自适应",slug:"js自适应",children:[]},{level:3,title:"SPA设计",slug:"spa设计",children:[]}]},{level:2,title:"上线指导",slug:"上线指导",children:[{level:3,title:"生产构建",slug:"生产构建",children:[]},{level:3,title:"发布部署",slug:"发布部署",children:[]}]},{level:2,title:"构建工具",slug:"构建工具-1",children:[{level:3,title:"创建目录",slug:"创建目录",children:[]},{level:3,title:"初始化",slug:"初始化",children:[]},{level:3,title:"创建业务目录",slug:"创建业务目录",children:[]},{level:3,title:"创建配置文件",slug:"创建配置文件",children:[]}]},{level:2,title:"项目面试",slug:"项目面试",children:[{level:3,title:"二面考什么？",slug:"二面考什么",children:[]},{level:3,title:"项目怎么准备",slug:"项目怎么准备",children:[]},{level:3,title:"项目该怎么介绍",slug:"项目该怎么介绍",children:[]}]},{level:2,title:"项目收益",slug:"项目收益",children:[{level:3,title:"【面试】",slug:"【面试】",children:[]},{level:3,title:"项目总结",slug:"项目总结",children:[]}]}],filePathRelative:"summary/project.md",git:{updatedTime:1630155599e3,contributors:[]}}},8129:(n,a,s)=>{s.r(a),s.d(a,{default:()=>e});const l=(0,s(6252).uE)('<h1 id="业务开发" tabindex="-1"><a class="header-anchor" href="#业务开发" aria-hidden="true">#</a> 业务开发</h1><h2 id="业务开发流程" tabindex="-1"><a class="header-anchor" href="#业务开发流程" aria-hidden="true">#</a> 业务开发流程</h2><h3 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型" aria-hidden="true">#</a> 技术选型</h3><ul><li>组员的技术类型</li><li>框架的发展，bug更新速度</li><li>适用性</li></ul><h4 id="构建工具" tabindex="-1"><a class="header-anchor" href="#构建工具" aria-hidden="true">#</a> 构建工具</h4><ol><li>构建工具有哪些</li></ol><ul><li>任务分配和管理 <code>gulp</code>（流操作，输入输出） <code>grunt</code>（不是流操作复杂项目比较慢）</li><li>不仅管理，而且编译 <code>webpack</code><code>rollup</code>（跟webpack类似）</li><li>其他 <code>fis</code>（百度内部） <code>prepack</code>（facebook）</li></ul><ol start="2"><li><p>为什么要构建工具 <code>资源压缩</code> <code>静态资源替换</code> <code>模块化处理</code> <code>编译处理</code></p></li><li><p>我们用哪个构建工具 <code>webpack</code>做编译 <code>npm scripts</code>做管理</p></li></ol><h4 id="mvvm框架选择" tabindex="-1"><a class="header-anchor" href="#mvvm框架选择" aria-hidden="true">#</a> MVVM框架选择</h4><p><code>Vue</code><code>React</code><code>Angular</code>-后端转前端</p><h4 id="模块化设计" tabindex="-1"><a class="header-anchor" href="#模块化设计" aria-hidden="true">#</a> 模块化设计</h4><ol><li>js模块化设计 <ul><li>common.js 公司内所有项目的登录，注册等通用的东西</li><li>layout.js 公共布局</li><li>public.js(引入common.js和layout.js)</li><li>util.js</li></ul></li><li>CSS模块化设计</li></ol><h4 id="自适应方案设计" tabindex="-1"><a class="header-anchor" href="#自适应方案设计" aria-hidden="true">#</a> 自适应方案设计</h4><h4 id="代码维护及复用性设计的思考" tabindex="-1"><a class="header-anchor" href="#代码维护及复用性设计的思考" aria-hidden="true">#</a> 代码维护及复用性设计的思考</h4><ul><li>需求变更</li><li>产品迭代</li><li>Bug定位</li><li>新功能开发</li></ul><h3 id="业务开发-1" tabindex="-1"><a class="header-anchor" href="#业务开发-1" aria-hidden="true">#</a> 业务开发</h3><h3 id="测试验证" tabindex="-1"><a class="header-anchor" href="#测试验证" aria-hidden="true">#</a> 测试验证</h3><h3 id="发布上线" tabindex="-1"><a class="header-anchor" href="#发布上线" aria-hidden="true">#</a> 发布上线</h3><h2 id="项目设计与原理分析" tabindex="-1"><a class="header-anchor" href="#项目设计与原理分析" aria-hidden="true">#</a> 项目设计与原理分析</h2><h3 id="css模块化设计" tabindex="-1"><a class="header-anchor" href="#css模块化设计" aria-hidden="true">#</a> CSS模块化设计</h3><ol><li>设计原则</li></ol><ul><li>可复用能继承要完整</li><li>周期性迭代</li></ul><ol start="2"><li>设计方法</li></ol><ul><li>先整体后部分再颗粒化 <ul><li>布局-页面（大的页面）-功能（基础组件）-业务</li></ul></li><li>先抽象再具体 <ul><li>京东金融可以把所有块作为面板抽象出来</li><li>抽象成列表（横向/纵向）</li></ul></li></ul><ol start="3"><li>具体方案</li></ol><ul><li>reset.scss 重置默认样式</li><li>layout.scss 布局样式</li><li>element.scss 列表，按钮等功能性的东西</li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/* layout.css */</span>\n<span class="token comment">/* 使用utf-8编码 */</span>\n<span class="token atrule"><span class="token rule">@charset</span> “UTF-8&quot;\n\n@mixin <span class="token function">flex</span><span class="token punctuation">(</span>$<span class="token property">direction</span><span class="token punctuation">:</span>column<span class="token punctuation">,</span>$<span class="token property">inline</span><span class="token punctuation">:</span>block<span class="token punctuation">)</span></span><span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> <span class="token function">if</span><span class="token punctuation">(</span>$inline==block<span class="token punctuation">,</span>flex<span class="token punctuation">,</span>inline-flex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">flex-direction</span><span class="token punctuation">:</span>$direction<span class="token punctuation">;</span>\n    <span class="token property">flex-wrap</span><span class="token punctuation">:</span>wrap<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/* element.scss */</span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&quot;./layout.scss&quot;</span>\n\n@mixin <span class="token function">btn</span><span class="token punctuation">(</span>$<span class="token property">size</span><span class="token punctuation">:</span>14px<span class="token punctuation">,</span>$<span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">,</span>$<span class="token property">bgcolor</span><span class="token punctuation">:</span>#F04752<span class="token punctuation">,</span>$<span class="token property">padding</span><span class="token punctuation">:</span>5px<span class="token punctuation">,</span>$<span class="token property">radius</span><span class="token punctuation">:</span>5px<span class="token punctuation">)</span></span><span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span>$padding<span class="token punctuation">;</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span>$bgcolor<span class="token punctuation">;</span>\n    <span class="token property">border-radius</span><span class="token punctuation">:</span>$radius<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span>1px solid $bgcolor<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span>#size<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span>$color<span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@mixin</span> <span class="token function">list</span><span class="token punctuation">(</span>$<span class="token property">direction</span><span class="token punctuation">:</span>column<span class="token punctuation">)</span></span><span class="token punctuation">{</span>\n    <span class="token atrule"><span class="token rule">@include</span> <span class="token function">flex</span><span class="token punctuation">(</span>$direction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@mixin</span> <span class="token function">panel</span><span class="token punctuation">(</span>$<span class="token property">bgcolor</span><span class="token punctuation">:</span>#fff<span class="token punctuation">,</span>$<span class="token property">padding</span><span class="token punctuation">:</span>0<span class="token punctuation">,</span>$<span class="token property">margin</span><span class="token punctuation">:</span>20px 0<span class="token punctuation">,</span>$<span class="token property">height</span><span class="token punctuation">:</span>112px<span class="token punctuation">,</span>$<span class="token property">txtPadding</span><span class="token punctuation">:</span>0 32px<span class="token punctuation">,</span>$<span class="token property">color</span><span class="token punctuation">:</span>#333<span class="token punctuation">,</span>$<span class="token property">fontSize</span><span class="token punctuation">:</span>32px<span class="token punctuation">)</span></span><span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span>$bgcolor<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span>$padding<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span>$margin<span class="token punctuation">;</span>\n    <span class="token selector">&gt;h4</span><span class="token punctuation">{</span>\n        <span class="token property">height</span><span class="token punctuation">:</span>$height<span class="token punctuation">;</span>\n        <span class="token property">line-height</span><span class="token punctuation">:</span>$height<span class="token punctuation">;</span>\n        <span class="token property">padding</span><span class="token punctuation">:</span>$txtPadding<span class="token punctuation">;</span>\n        <span class="token property">text-overflow</span><span class="token punctuation">:</span>ellipsis<span class="token punctuation">;</span>\n        <span class="token property">white-space</span><span class="token punctuation">:</span>nowrap<span class="token punctuation">;</span>\n        <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span>\n        <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span>\n        <span class="token property">color</span><span class="token punctuation">:</span>$color<span class="token punctuation">;</span>\n        <span class="token property">font-size</span><span class="token punctuation">:</span>$fontSize<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="js组件设计" tabindex="-1"><a class="header-anchor" href="#js组件设计" aria-hidden="true">#</a> JS组件设计</h3><ol><li>设计原则</li></ol><ul><li>高内聚低耦合 <ul><li>功能组件直接不要互相依赖(最高效复用)</li></ul></li><li>周期性迭代</li></ul><ol start="2"><li>设计方法</li></ol><ul><li>先整体后部分再颗粒化</li><li>尽可能地抽象（让任何东西都可以用的地步）</li></ul><ol start="3"><li>抽象组件（复用的,放入core文件夹），业务组件（不能复用的，放入每个页面的文件夹仅在界面结构布局组件中当做一块来使用），页面布局组件(放入每个页面的文件夹，index.vue，引用本页面所有的业务组件，从上而下排列，方便修改布局)</li><li>是否做成抽象组件：结构简单，没有交互性，不频繁出现，就不需要特地做成组件</li></ol><h3 id="js自适应" tabindex="-1"><a class="header-anchor" href="#js自适应" aria-hidden="true">#</a> JS自适应</h3><ul><li>移动端自适应，一份代码跑遍各个设备</li></ul><ol><li>基本概念（https://github.com/jawil/blog/issues/21） <ul><li>CSS像素(px)，设备像素(也叫物理像素，设备上的一个像素)，逻辑像素(px)，设备像素比（逻辑像素和设备像素的比值，比如苹果是2）</li><li>viewport</li><li>rem</li></ul></li><li>工作原理 <ul><li>利用viewport和设备像素比调整基准像素（html的fontsize通过js动态地按物理像素/css像素的比值进行调整）</li><li>利用px2rem自动转换css单位</li></ul></li></ol><h3 id="spa设计" tabindex="-1"><a class="header-anchor" href="#spa设计" aria-hidden="true">#</a> SPA设计</h3><ol><li><p>设计意义</p><ul><li>前后端分离(前后端代码不耦合)</li><li>减轻服务器压力（当一个应用操作比较复杂，有十几个页面的时候，每个用户操作几个页面只需要请求一次）</li><li>增强用户体验（不存在多次下载页面的时间，只有接口的时间）</li><li>Prerender预渲染优化SEO(单页面对搜索引擎不友好，使用预渲染优化)<img src="codingfishman.github.io/2016/05/06/prerender预渲染优化SEO/" alt="预渲染"></li></ul></li><li><p>工作原理</p><ul><li>History API(更加优雅，但对浏览器有要求)</li></ul><ul><li>window.history.pushState()注册路由</li><li></li><li>Hash（不优雅，但兼容性最好） <ul><li>使用location.hash修改路由</li><li>目标页面监听hashchange事件</li></ul></li></ul></li><li><p>面试</p><ul><li>spa做了哪些事情？</li><li>它是怎么做到的？</li></ul></li></ol><h2 id="上线指导" tabindex="-1"><a class="header-anchor" href="#上线指导" aria-hidden="true">#</a> 上线指导</h2><h3 id="生产构建" tabindex="-1"><a class="header-anchor" href="#生产构建" aria-hidden="true">#</a> 生产构建</h3><p>合并(style合并成一个文件和js)、抽取（样式从js中抽取出来）、压缩（js，css都需要压缩）、调试（开启sourcemap）</p><h3 id="发布部署" tabindex="-1"><a class="header-anchor" href="#发布部署" aria-hidden="true">#</a> 发布部署</h3><p>提交（git管理版本）、部署（后端从git仓库拉去代码，通过小流量，跨机房，全量部署）、开启gzip压缩（后端服务需要开启gzip压缩。前端需要检查js和css文件有没有开启gzip压缩。这个比webpack压缩压缩率高很多）、更新CDN</p><h2 id="构建工具-1" tabindex="-1"><a class="header-anchor" href="#构建工具-1" aria-hidden="true">#</a> 构建工具</h2><h3 id="创建目录" tabindex="-1"><a class="header-anchor" href="#创建目录" aria-hidden="true">#</a> 创建目录</h3><ul><li>mkdir xxx</li></ul><h3 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h3><ul><li>npm init</li></ul><h3 id="创建业务目录" tabindex="-1"><a class="header-anchor" href="#创建业务目录" aria-hidden="true">#</a> 创建业务目录</h3><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>webpack-test\n├─── app\n│   ├── js\n│       ├── main.js\n│       ├── App.vue\n│       ├── test.vue\n│       ├── home\n│           ├── index.vue\n│       ├── router\n│           ├── index.js\n│   ├── css\n│       ├── reset.scss\n│   ├── views\n│       ├── index.html\n└── package.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="创建配置文件" tabindex="-1"><a class="header-anchor" href="#创建配置文件" aria-hidden="true">#</a> 创建配置文件</h3><ul><li>创建配置文件webpack.config.js</li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>webpack-test\n├─── app\n├─── webpack.config.js\n└── package.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>文件配置 <ul><li>基础配置 <ul><li>entry</li><li>module</li><li>plugins</li><li>output</li></ul></li><li>进阶配置 <ul><li>resolve</li><li>devtool</li><li>devServer</li></ul></li></ul></li></ul><h2 id="项目面试" tabindex="-1"><a class="header-anchor" href="#项目面试" aria-hidden="true">#</a> 项目面试</h2><ul><li><p>同学做过哪些项目啊...</p></li><li><p>为什么用这样的框架呢</p></li><li><p>在项目中的角色是什么？解决过哪些难题...</p></li><li><p>通过这个项目学到了什么...</p></li></ul><h3 id="二面考什么" tabindex="-1"><a class="header-anchor" href="#二面考什么" aria-hidden="true">#</a> 二面考什么？</h3><ul><li>一面基础，二面项目，三面负责人聊文化，综合素质，四面hr，性格，薪资，加班等</li><li>项目经验</li><li>技术深度</li><li>架构能力</li></ul><h3 id="项目怎么准备" tabindex="-1"><a class="header-anchor" href="#项目怎么准备" aria-hidden="true">#</a> 项目怎么准备</h3><ul><li>梳理历史项目（挨个设计优化空间），简历中认真写两到三个，三到四个项目。</li><li>挑选并打造一个非常满意的走心的项目（体现自己能力的项目）聊到大家不懂为止。用新的技术栈去更新项目，不一定非要是公司的项目</li><li>问答设计</li></ul><h3 id="项目该怎么介绍" tabindex="-1"><a class="header-anchor" href="#项目该怎么介绍" aria-hidden="true">#</a> 项目该怎么介绍</h3><ul><li>项目背景 <ul><li>两三句话就可以了，时间，业务场景。</li></ul></li><li><h2 id="项目收益" tabindex="-1"><a class="header-anchor" href="#项目收益" aria-hidden="true">#</a> 项目收益</h2></li><li>项目设计 <ul><li>技术方案，特色亮点</li><li>扩展性强不强</li></ul></li><li>项目总结 <ul><li>不足，值得探索没来得及验证的，可以优化的点</li></ul></li></ul><h3 id="【面试】" tabindex="-1"><a class="header-anchor" href="#【面试】" aria-hidden="true">#</a> 【面试】</h3><ul><li>Vue的双向绑定是如何实现的？ <ul><li>设计模式，能否手写出设计模式</li></ul></li><li>有没有使用CSS Module，基本原理是什么，Vue该如何做？</li><li>开启CSS Module知乎如何使用第三方样式库</li><li>Vue安装包有几个版本，遇到问题如何解决的？</li><li>你的项目有什么特色，解决过什么问题，用了什么技术方案 <ul><li>特色 <ul><li>自适应方案 <ul><li>一般是用media+rem的方案去做，但是media有优先级，多个media会有优先级覆盖，可能会导致失效。而且设备太多，一个个去写，测试机不可能太多，覆盖面窄</li><li>动态去计算fontsize,然后背后原理就是px转rem。</li><li>怎么实现？px2rem，一个loader，把所有px转成rem</li></ul></li><li>模块化设计</li></ul></li><li>解决过什么问题 <ul><li>自适应方案，怎么把viewport的js跟webpack进行打包，解决了计算fontsize问题 <ul><li>一般是用media+rem的方案去做，但是media有优先级，多个media会有优先级覆盖，可能会导致失效。而且设备太多，一个个去写，测试机不可能太多，覆盖面窄</li><li>动态去计算fontsize,然后背后原理就是px转rem。</li><li>怎么实现？px2rem</li></ul></li></ul></li></ul></li><li>你对自己的项目是否满意，有改进空间吗 <ul><li>gzip压缩</li><li>组件异步加载</li></ul></li><li>为什么选择Webpack构建工具</li><li>项目是如何使用webpack的？dev-server的原理是什么？</li><li>有没有实现一个webpack的loader?</li><li>如何做任务管理的？（区分编译开发环境的还是编译生产环境，动态监听某个文件，watch，比如node script,gulp,grant等）</li><li>如果这个项目让你重新设计，你会怎么思考？</li><li>自适应方案应该怎么做，原理是什么</li><li>rem和em的区别</li><li>前后端分离是怎么做的</li><li>前端路由是什么原理</li></ul><h3 id="项目总结" tabindex="-1"><a class="header-anchor" href="#项目总结" aria-hidden="true">#</a> 项目总结</h3><ul><li><p>项目的所有原理必须弄清楚，至少知道大概是怎么做的，只知道怎么使用是不行的。</p></li><li><p>如何抽象设计组件</p></li><li><p>如何设计模块化</p></li><li><p>如何独立构建项目</p></li><li><p>如何上线</p></li><li><p>方案原理</p><ul><li>最完美的自适应方案如何做？</li></ul></li><li><p>路由的工作原理？</p></li><li><p>Vue的相关用法</p></li></ul>',67),e={render:function(n,a){return l}}}}]);