"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[452],{925:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-ee629f36",path:"/Frontend/js/jsbasic/zepto.html",title:"zepto源码解读",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"逻辑设计",slug:"逻辑设计",children:[]},{level:2,title:"zepto设计原理",slug:"zepto设计原理",children:[]},{level:2,title:"zepto源码解构",slug:"zepto源码解构",children:[]},{level:2,title:"zepto源码-init函数",slug:"zepto源码-init函数",children:[]},{level:2,title:"zepto源码-Z函数-上",slug:"zepto源码-z函数-上",children:[]},{level:2,title:"zepto源码-Z函数-下",slug:"zepto源码-z函数-下",children:[]}],filePathRelative:"Frontend/js/jsbasic/zepto.md",git:{updatedTime:1563409969e3,contributors:[]}}},9457:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="zepto源码解读" tabindex="-1"><a class="header-anchor" href="#zepto源码解读" aria-hidden="true">#</a> zepto源码解读</h1><h2 id="逻辑设计" tabindex="-1"><a class="header-anchor" href="#逻辑设计" aria-hidden="true">#</a> 逻辑设计</h2><p>zepto对象看起来像数组，但无论是instanceof还是._<em>proto</em>_.constructor都不是Array.</p><h2 id="zepto设计原理" tabindex="-1"><a class="header-anchor" href="#zepto设计原理" aria-hidden="true">#</a> zepto设计原理</h2><p>重写数组_<em>proto</em>_，里面要用到原数组属性的直接=Array.prototype.xxx，其余添加它想要添加的方法。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\narr<span class="token punctuation">.</span>__proto__<span class="token operator">=</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">addClass</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is addClass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  concat<span class="token operator">:</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>concat<span class="token punctuation">,</span>\n  push<span class="token operator">:</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\narr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\narr<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="zepto源码解构" tabindex="-1"><a class="header-anchor" href="#zepto源码解构" aria-hidden="true">#</a> zepto源码解构</h2><p>https://cdn.bootcss.com/zepto/1.1.6/zepto.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Zepto<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">var</span> $<span class="token punctuation">,</span>\n  zepto<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token comment">//省略N行代码</span>\n  <span class="token function-variable function">$</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">selector<span class="token punctuation">,</span>context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> zepto<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span>context<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">//省略N行代码</span>\n  <span class="token keyword">return</span> $\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nwindow<span class="token punctuation">.</span>Zepto<span class="token operator">=</span>Zepto\nwindow<span class="token punctuation">.</span>$<span class="token operator">===</span><span class="token keyword">undefined</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>$<span class="token operator">=</span>Zepto<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="zepto源码-init函数" tabindex="-1"><a class="header-anchor" href="#zepto源码-init函数" aria-hidden="true">#</a> zepto源码-init函数</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>zepto<span class="token punctuation">.</span><span class="token function-variable function">init</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">selector<span class="token punctuation">,</span>context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">var</span> dom\n  <span class="token comment">// ...此处省略N行对dom的处理...</span>\n  <span class="token comment">// 1.selector为空</span>\n  <span class="token comment">// 2.selector是字符串，其中又分好几种情况</span>\n  <span class="token comment">// 3.selector是函数</span>\n  <span class="token comment">// 4.其他情况，例如selector是数组，对象等</span>\n  <span class="token keyword">return</span> zepto<span class="token punctuation">.</span><span class="token constant">Z</span><span class="token punctuation">(</span>dom<span class="token punctuation">,</span>selector<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="zepto源码-z函数-上" tabindex="-1"><a class="header-anchor" href="#zepto源码-z函数-上" aria-hidden="true">#</a> zepto源码-Z函数-上</h2><p>.fn，在类库中一般是.prototype原型的意思。因为prototype太长，所以把prototype赋值给fn</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>zepto<span class="token punctuation">.</span><span class="token function-variable function">Z</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">dom<span class="token punctuation">,</span>selector</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  dom<span class="token operator">=</span>dom<span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n  dom<span class="token punctuation">.</span>__proto__<span class="token operator">=</span>$<span class="token punctuation">.</span>fn\n  dom<span class="token punctuation">.</span>selector<span class="token operator">=</span>selector<span class="token operator">||</span><span class="token string">&#39;&#39;</span>\n  <span class="token keyword">return</span> dom\n<span class="token punctuation">}</span>\n\n$<span class="token punctuation">.</span>fn<span class="token operator">=</span><span class="token punctuation">{</span>\n  <span class="token comment">//...很多属性...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="zepto源码-z函数-下" tabindex="-1"><a class="header-anchor" href="#zepto源码-z函数-下" aria-hidden="true">#</a> zepto源码-Z函数-下</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token constant">Z</span><span class="token punctuation">(</span><span class="token parameter">dom<span class="token punctuation">,</span>selector</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">var</span> i<span class="token punctuation">,</span>len<span class="token operator">=</span>dom<span class="token operator">?</span>dom<span class="token punctuation">.</span>length<span class="token operator">:</span><span class="token number">0</span>\n  <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>dom<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token operator">=</span>len\n  <span class="token keyword">this</span><span class="token punctuation">.</span>selector<span class="token operator">=</span>selector<span class="token operator">||</span><span class="token string">&#39;&#39;</span>\n<span class="token punctuation">}</span>\n\nzepto<span class="token punctuation">.</span><span class="token function-variable function">Z</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">dom<span class="token punctuation">,</span>selector</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Z</span><span class="token punctuation">(</span>dom<span class="token punctuation">,</span>selector<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n$<span class="token punctuation">.</span>fn<span class="token operator">=</span><span class="token punctuation">{</span>\n  <span class="token comment">//...很多属性...</span>\n<span class="token punctuation">}</span>\n\nzepto<span class="token punctuation">.</span><span class="token class-name">Z</span><span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token class-name">Z</span><span class="token punctuation">.</span>prototype<span class="token operator">=</span>$<span class="token punctuation">.</span>fn\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>',16),t={render:function(n,s){return p}}}}]);